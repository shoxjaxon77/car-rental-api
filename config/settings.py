"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.0.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
from decouple import config

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DEBUG', default=False, cast=bool)

ALLOWED_HOSTS = ['car-rental-api-aeh4.onrender.com', 'localhost', '127.0.0.1']

# Production settings
DEBUG = False

ALLOWED_HOSTS = ['car-rental-api-gyfw.onrender.com', 'localhost', '127.0.0.1']

# Security settings
SECURE_SSL_REDIRECT = True
SESSION_COOKIE_SECURE = True
CSRF_COOKIE_SECURE = True
SECURE_HSTS_SECONDS = 31536000
SECURE_HSTS_INCLUDE_SUBDOMAINS = True
SECURE_HSTS_PRELOAD = True


# Application definition

INSTALLED_APPS = [
    "jazzmin",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    
    # Third party apps
    'rest_framework',
    'corsheaders',
    'drf_yasg',
    
    # Local apps
    'cars',
    'users',
]

# Jazzmin Settings
JAZZMIN_SETTINGS = {
    # General settings
    "site_title": "Car Rental System",
    "site_header": "Car Rental",
    "site_brand": "ðŸš— Car Rental",
    "welcome_sign": "Welcome to Car Rental Management System",
    "copyright": "Car Rental - All rights reserved Â© 2025",
    "search_model": ["users.CustomUser", "cars.Car", "cars.Booking"],
    "user_avatar": "avatar",
    
    # Top Menu Items
    "topmenu_links": [
        {"name": "Dashboard", "url": "admin:index", "permissions": ["auth.view_user"]},
        {"name": "Cars", "model": "cars.Car"},
        {"name": "Bookings", "model": "cars.Booking"},
        {"name": "Users", "model": "users.CustomUser"},
        {"name": "Support", "url": "https://support.example.com", "new_window": True},
    ],
    
    # Side Menu Organization
    "show_sidebar": True,
    "navigation_expanded": False,
    "hide_apps": [],
    "hide_models": [],
    "order_with_respect_to": [
        "users",
        "cars",
        "auth",
    ],
    
    # Menu Icons
    "icons": {
        "auth": "fas fa-shield-alt",
        "auth.user": "fas fa-user",
        "users.customuser": "fas fa-user-tie",
        "auth.Group": "fas fa-users",
        "cars.brand": "fas fa-copyright",
        "cars.car": "fas fa-car-side",
        "cars.booking": "fas fa-calendar-alt",
        "cars.contract": "fas fa-file-signature",
    },
    
    # UI Customization
    "show_ui_builder": True,
    "changeform_format": "horizontal_tabs",
    "changeform_format_overrides": {
        "users.customuser": "collapsible",
        "auth.group": "vertical_tabs",
        "cars.car": "horizontal_tabs",
        "cars.booking": "vertical_tabs",
    },
    
    # Custom Links and Actions
    "custom_links": {
        "cars": [{
            "name": "Generate Report", 
            "url": "generate_report", 
            "icon": "fas fa-file-pdf",
            "permissions": ["cars.view_car"]
        }]
    },
    
    # Related Modal Configuration
    "related_modal_active": True,
    
    # Custom CSS/JS for additional styling
    "custom_css": None,
    "custom_js": None,
    
    # Show the admin home icon on the side menu
    "show_apps": True,
    
    # Additional UI tweaks
    "show_filters": True,
    "navigation_expanded": True,
}

JAZZMIN_UI_TWEAKS = {
    # Small text on the top navigation?
    "navbar_small_text": False,
    # Small text on the footer?
    "footer_small_text": False,
    # Small text everywhere?
    "body_small_text": False,
    # Small text on the brand/logo?
    "brand_small_text": False,
    # Brand/logo background colour
    "brand_colour": "navbar-indigo",
    # Accent colour
    "accent": "accent-teal",
    # Navbar colour
    "navbar": "navbar-indigo navbar-dark",
    # No navbar border
    "no_navbar_border": True,
    # Fixed layout (navbar and footer)
    "navbar_fixed": True,
    "footer_fixed": False,
    "sidebar_fixed": True,
    # Sidebar themes
    "sidebar": "sidebar-dark-indigo",
    "sidebar_nav_small_text": False,
    "sidebar_disable_expand": False,
    "sidebar_nav_child_indent": True,
    # A list of css classes to customise the admin interface
    "custom_css": None,
    # Choose a dark theme
    "theme": "flatly",
    "dark_mode_theme": "darkly",
    # Button classes
    "button_classes": {
        "primary": "btn-primary",
        "secondary": "btn-secondary",
        "info": "btn-outline-info",
        "warning": "btn-outline-warning",
        "danger": "btn-outline-danger",
        "success": "btn-outline-success"
    },
    # Actions classes
    "actions_sticky_top": True
}

# CORS settings
CORS_ALLOW_ALL_ORIGINS = True
CORS_ALLOW_CREDENTIALS = True
CORS_ALLOW_HEADERS = [
    'accept',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
]

# Static files configuration
STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR / 'staticfiles'
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    'corsheaders.middleware.CorsMiddleware',
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "config.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "config.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR / 'staticfiles'
STATICFILES_DIRS = [
    BASE_DIR / 'static',
]
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# Whitenoise for static files
MIDDLEWARE.insert(1, 'whitenoise.middleware.WhiteNoiseMiddleware')
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Custom user model
AUTH_USER_MODEL = 'users.CustomUser'

# REST Framework settings
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework_simplejwt.authentication.JWTAuthentication',
        'rest_framework.authentication.SessionAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
}

# CORS settings - barcha so'rovlarga ruxsat berish
CORS_ALLOW_ALL_ORIGINS = True
CORS_ALLOW_CREDENTIALS = True
CORS_ALLOW_METHODS = ['*']
CORS_ALLOW_HEADERS = ['*']

# JWT settings - token muddatini uzaytirish
from datetime import timedelta
SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(days=30),  # 30 kunlik token
    'REFRESH_TOKEN_LIFETIME': timedelta(days=90),  # 90 kunlik refresh token
    'ROTATE_REFRESH_TOKENS': False,
    'BLACKLIST_AFTER_ROTATION': False,
}
